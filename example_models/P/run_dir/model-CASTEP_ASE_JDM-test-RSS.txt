
###### START RUN Wed Sep 21 10:57:37 2022 ######
Model CASTEP_ASE_JDM, Test RSS
Test run at 2022-09-21 10:57

model file: ../../models/CASTEP_ASE_JDM/model.py
============================================================
import os
from distutils import spawn
from ase.calculators.castep import Castep

model_abs_dir = os.path.abspath(os.path.dirname(__file__))

mpirun = "mpirun"
mpirun_args = "-n 16"
castep = "castep.mpi"

os.environ['CASTEP_COMMAND'] = 'module load use.local && module load intel/2019 && export OMP_NUM_THREADS=1 MKL_NUM_THREADS=1 && {0} {1} {2}'.format(mpirun, mpirun_args, castep)

no_checkpoint = True

def start(test_name):
    global calculator
    calculator = Castep(directory=test_name,
                        cut_off_energy=500,
                        spin_polarized=False,
                        opt_strategy='speed',
                        xc_functional='PBE',
                        elec_energy_tol=1e-6,
                        max_scf_cycles=250,
                        fix_occupancy=False,
                        calculate_stress=True,
                        finite_basis_corr='automatic',
                        smearing_width='0.05',
                        #fine_grid_scale=1,
                        mixing_scheme='pulay',
                        mix_history_length=20,
                        num_dump_cycles=0,
                        kpoints_mp_spacing='0.050', # note that other values were used for some tests, e.g. 0.015 for bulk E(V), 0.07 for minimization of GAP amorphous structures, and perhaps some other variations
                        species_pot = ("P","{}/P_OTF.usp".format(model_abs_dir)),
                        perc_extra_bands=200)
============================================================
test file: ../../tests/RSS/test.py
============================================================
import os.path
from RSS import do_RSS
from ml_rss import ML_RSS
import numpy as np
from ase.units import mol

# mr = ML_RSS(None, directory=os.path.join(os.path.abspath(os.path.dirname(__file__))))

# buildcell_options = ['NATOM=1-10', f'VARVOL={volume}', 'MINSEP=2.0', 'SYMMOPS=1-4', 'SPECIES=P']
# buildcell_atoms=[]
# tag='P_GAP20'
# N=50
# mr.buildcells(N, buildcell_options, buildcell_atoms, tag)
# write(os.path.join(os.path.abspath(os.path.dirname(__file__)),'random_structs.xyz'), )
# volume = 1/2.34 * (1e8)**3 / mol * 30.9736
ps = np.genfromtxt(os.path.join(os.path.abspath(os.path.dirname(__file__)), 'rand_pressures_512_0.3GPa.txt'))

properties = do_RSS(os.path.join(os.path.abspath(os.path.dirname(__file__)),'random_structs_512.xyz'),':')
============================================================
/home/magnetite/vld/hert5155/QUIP_new/build/linux_x86_64_gfortran_openmp/quippy/__init__.py
got index  : range_slice_args [None, None]
using i_config range(0, 512)
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 5 , international (Hermann-Mauguin) C2 , Hall  C 2y
relax_config trying to maintain symmetry
/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/io/castep.py:248: UserWarning: Warning: you have constraints in your atoms, that are not supported by the CASTEP ase interface
  warnings.warn('Warning: you have constraints in your atoms, that are '
castep call stderr:
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
Ignoring PCI device with non-16bit domain.
Pass --enable-32bits-pci-domain to configure to support such devices
(warning: it would break the library ABI, don't enable unless really needed).
 * P               1      1.97871     -0.18297      3.46442 *
|-> line triggered exception: local variable 'n_atoms' referenced before assignmentFailed on 0
Traceback (most recent call last):
  File "/home/magnetite/vld/hert5155/applications/testing-framework/scripts/../share/RSS.py", line 25, in do_RSS
    robust_minim_cell_pos(at, tol, "RSS_%04d" % i_config)
  File "/home/magnetite/vld/hert5155/applications/testing-framework/scripts/../share/utilities.py", line 350, in robust_minim_cell_pos
    relax_config(atoms, relax_pos=True, relax_cell=True, tol=sd2_tol, max_steps=max_sd2_iter,
  File "/home/magnetite/vld/hert5155/applications/testing-framework/scripts/../share/utilities.py", line 214, in relax_config
    (traj, run_stat) = sd2_run("", atoms_cell, tol, lambda i : sd2_converged(i, atoms_cell, tol), max_steps, max_cell_vec_change_ratio=2.0) # JDM
  File "/home/magnetite/vld/hert5155/applications/testing-framework/scripts/../share/utilities.py", line 80, in sd2_run
    grad_f = - config_minim.get_forces()
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/constraints.py", line 2614, in get_forces
    forces = UnitCellFilter.get_forces(self, **kwargs)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/constraints.py", line 2434, in get_forces
    stress = self.atoms.get_stress(**kwargs)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/atoms.py", line 820, in get_stress
    stress = self._calc.get_stress(self)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/calculators/castep.py", line 69, in decor_getf
    return getf(self, atoms, *args, **kwargs)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/calculators/castep.py", line 1823, in get_stress
    self.update(atoms)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/calculators/castep.py", line 1879, in update
    self.calculate(atoms)
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/calculators/castep.py", line 1904, in calculate
    self.read()
  File "/u/vld/hert5155/anaconda3/lib/python3.8/site-packages/ase/calculators/castep.py", line 1228, in read
    for n in range(n_atoms):
UnboundLocalError: local variable 'n_atoms' referenced before assignment
relax_config symmetry before refinement at default tol 1.0e-6
ase.spacegroup.symmetrize: prec 1e-06 got symmetry group number 1 , international (Hermann-Mauguin) P1 , Hall  P 1
relax_config trying to maintain symmetry
